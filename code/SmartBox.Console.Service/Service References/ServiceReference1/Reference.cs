//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartBox.Console.Service.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSession", Namespace="http://schemas.datacontract.org/2004/07/Beyondbit.SmartBox.Server.Service")]
    [System.SerializableAttribute()]
    public partial class UserSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginTime {
            get {
                return this.LoginTimeField;
            }
            set {
                if ((this.LoginTimeField.Equals(value) != true)) {
                    this.LoginTimeField = value;
                    this.RaisePropertyChanged("LoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UID {
            get {
                return this.UIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UIDField, value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemRuntimeConfig", Namespace="http://schemas.datacontract.org/2004/07/Beyondbit.SmartBox.Server.Service")]
    [System.SerializableAttribute()]
    public partial class SystemRuntimeConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IManagerService")]
    public interface IManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ForceQuitUser", ReplyAction="http://tempuri.org/IManagerService/ForceQuitUserResponse")]
        void ForceQuitUser(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ForceQuitUsers", ReplyAction="http://tempuri.org/IManagerService/ForceQuitUsersResponse")]
        void ForceQuitUsers(string[] uids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ForceQuitSession", ReplyAction="http://tempuri.org/IManagerService/ForceQuitSessionResponse")]
        void ForceQuitSession(System.Guid sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ForceQuitSessions", ReplyAction="http://tempuri.org/IManagerService/ForceQuitSessionsResponse")]
        void ForceQuitSessions(System.Guid[] sessionIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ForceQuitClient", ReplyAction="http://tempuri.org/IManagerService/ForceQuitClientResponse")]
        void ForceQuitClient(string clientId, string resource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/QueryLoginUser", ReplyAction="http://tempuri.org/IManagerService/QueryLoginUserResponse")]
        SmartBox.Console.Service.ServiceReference1.UserSession[] QueryLoginUser(out int totalSize, int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ModifySystemRuntimeConfig", ReplyAction="http://tempuri.org/IManagerService/ModifySystemRuntimeConfigResponse")]
        void ModifySystemRuntimeConfig(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ModifySystemRuntimeConfigs", ReplyAction="http://tempuri.org/IManagerService/ModifySystemRuntimeConfigsResponse")]
        void ModifySystemRuntimeConfigs(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] configs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/QuerySystemRuntimeConfigs", ReplyAction="http://tempuri.org/IManagerService/QuerySystemRuntimeConfigsResponse")]
        SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] QuerySystemRuntimeConfigs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddSystemRuntimeConfig", ReplyAction="http://tempuri.org/IManagerService/AddSystemRuntimeConfigResponse")]
        void AddSystemRuntimeConfig(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/AddSystemRuntimeConfigs", ReplyAction="http://tempuri.org/IManagerService/AddSystemRuntimeConfigsResponse")]
        void AddSystemRuntimeConfigs(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] configs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveRuntimeConfig", ReplyAction="http://tempuri.org/IManagerService/RemoveRuntimeConfigResponse")]
        void RemoveRuntimeConfig(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/RemoveRuntimeConfigs", ReplyAction="http://tempuri.org/IManagerService/RemoveRuntimeConfigsResponse")]
        void RemoveRuntimeConfigs(string[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ResetRuntimeConfigs", ReplyAction="http://tempuri.org/IManagerService/ResetRuntimeConfigsResponse")]
        void ResetRuntimeConfigs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ResetClientVer", ReplyAction="http://tempuri.org/IManagerService/ResetClientVerResponse")]
        void ResetClientVer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManagerService/ResetApplication", ReplyAction="http://tempuri.org/IManagerService/ResetApplicationResponse")]
        void ResetApplication();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerServiceChannel : SmartBox.Console.Service.ServiceReference1.IManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerServiceClient : System.ServiceModel.ClientBase<SmartBox.Console.Service.ServiceReference1.IManagerService>, SmartBox.Console.Service.ServiceReference1.IManagerService {
        
        public ManagerServiceClient() {
        }
        
        public ManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ForceQuitUser(string uid) {
            base.Channel.ForceQuitUser(uid);
        }
        
        public void ForceQuitUsers(string[] uids) {
            base.Channel.ForceQuitUsers(uids);
        }
        
        public void ForceQuitSession(System.Guid sessionId) {
            base.Channel.ForceQuitSession(sessionId);
        }
        
        public void ForceQuitSessions(System.Guid[] sessionIds) {
            base.Channel.ForceQuitSessions(sessionIds);
        }
        
        public void ForceQuitClient(string clientId, string resource) {
            base.Channel.ForceQuitClient(clientId, resource);
        }
        
        public SmartBox.Console.Service.ServiceReference1.UserSession[] QueryLoginUser(out int totalSize, int pageSize, int pageIndex) {
            return base.Channel.QueryLoginUser(out totalSize, pageSize, pageIndex);
        }
        
        public void ModifySystemRuntimeConfig(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig config) {
            base.Channel.ModifySystemRuntimeConfig(config);
        }
        
        public void ModifySystemRuntimeConfigs(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] configs) {
            base.Channel.ModifySystemRuntimeConfigs(configs);
        }
        
        public SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] QuerySystemRuntimeConfigs() {
            return base.Channel.QuerySystemRuntimeConfigs();
        }
        
        public void AddSystemRuntimeConfig(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig config) {
            base.Channel.AddSystemRuntimeConfig(config);
        }
        
        public void AddSystemRuntimeConfigs(SmartBox.Console.Service.ServiceReference1.SystemRuntimeConfig[] configs) {
            base.Channel.AddSystemRuntimeConfigs(configs);
        }
        
        public void RemoveRuntimeConfig(string key) {
            base.Channel.RemoveRuntimeConfig(key);
        }
        
        public void RemoveRuntimeConfigs(string[] keys) {
            base.Channel.RemoveRuntimeConfigs(keys);
        }
        
        public void ResetRuntimeConfigs() {
            base.Channel.ResetRuntimeConfigs();
        }
        
        public void ResetClientVer() {
            base.Channel.ResetClientVer();
        }
        
        public void ResetApplication() {
            base.Channel.ResetApplication();
        }
    }
}
